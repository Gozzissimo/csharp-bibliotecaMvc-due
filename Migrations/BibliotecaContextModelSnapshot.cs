// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using csharp_bibliotecaMvc.Models;

#nullable disable

namespace csharp_bibliotecaMvc.Migrations
{
    [DbContext(typeof(BibliotecaContext))]
    partial class BibliotecaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AutoreLibro", b =>
                {
                    b.Property<int>("AutoriAutoreId")
                        .HasColumnType("int");

                    b.Property<string>("LibriLibroId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AutoriAutoreId", "LibriLibroId");

                    b.HasIndex("LibriLibroId");

                    b.ToTable("AutoreLibro");
                });

            modelBuilder.Entity("csharp_bibliotecaMvc.Models.Autore", b =>
                {
                    b.Property<int>("AutoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AutoreId"), 1L, 1);

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascita")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AutoreId");

                    b.ToTable("Autore", (string)null);
                });

            modelBuilder.Entity("csharp_bibliotecaMvc.Models.Libro", b =>
                {
                    b.Property<string>("LibroId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Scaffale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stato")
                        .HasColumnType("int");

                    b.Property<string>("Titolo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LibroId");

                    b.ToTable("Libro", (string)null);
                });

            modelBuilder.Entity("csharp_bibliotecaMvc.Models.Prestito", b =>
                {
                    b.Property<int>("PrestitoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrestitoId"), 1L, 1);

                    b.Property<DateTime>("Fine")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Inizio")
                        .HasColumnType("datetime2");

                    b.Property<string>("LibroId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UtenteId")
                        .HasColumnType("int");

                    b.HasKey("PrestitoId");

                    b.HasIndex("LibroId");

                    b.HasIndex("UtenteId");

                    b.ToTable("Prestito", (string)null);
                });

            modelBuilder.Entity("csharp_bibliotecaMvc.Models.Utente", b =>
                {
                    b.Property<int>("UtenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UtenteId"), 1L, 1);

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UtenteId");

                    b.ToTable("Utente", (string)null);
                });

            modelBuilder.Entity("AutoreLibro", b =>
                {
                    b.HasOne("csharp_bibliotecaMvc.Models.Autore", null)
                        .WithMany()
                        .HasForeignKey("AutoriAutoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("csharp_bibliotecaMvc.Models.Libro", null)
                        .WithMany()
                        .HasForeignKey("LibriLibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("csharp_bibliotecaMvc.Models.Prestito", b =>
                {
                    b.HasOne("csharp_bibliotecaMvc.Models.Libro", "Libro")
                        .WithMany("Prestiti")
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("csharp_bibliotecaMvc.Models.Utente", "Utente")
                        .WithMany("Prestiti")
                        .HasForeignKey("UtenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Libro");

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("csharp_bibliotecaMvc.Models.Libro", b =>
                {
                    b.Navigation("Prestiti");
                });

            modelBuilder.Entity("csharp_bibliotecaMvc.Models.Utente", b =>
                {
                    b.Navigation("Prestiti");
                });
#pragma warning restore 612, 618
        }
    }
}
